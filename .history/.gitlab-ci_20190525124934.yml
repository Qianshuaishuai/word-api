image: docker:git

stages:
  - test
  - build
  - deploy

variables:
  ALI_REGISTRY_HOST: "registry-vpc.cn-shenzhen.aliyuncs.com"
  ALI_REGISTRY_IMAGE: "registry-vpc.cn-shenzhen.aliyuncs.com/ebag/ebag-knowtech"
  ALI_SERVICE_NAME: "ebag-prod_word-api"
  TEST_SERVICE_NAME: "ebag-test_word-api"

build-develop:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --build-arg APP_ROOT=/go/src/gitlab.dreamdev.cn/ebag/$CI_PROJECT_NAME -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:latest -f docker/test/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - develop
 
deploy-develop:
  stage: deploy
  variables:
    DOCKER_HOST: $DOCKER_HOST_TEST
    DOCKER_TLS_VERIFY: 1
    SERVICE_NAME: test
  image: docker:latest
  script:
    - mkdir -p ~/.docker
    - echo "$DOCKER_HOST_TLS_CA_CERT_TEST" > ~/.docker/ca.pem
    - echo "$DOCKER_HOST_TLS_CERT_TEST" > ~/.docker/cert.pem
    - echo "$DOCKER_HOST_TLS_KEY_TEST" > ~/.docker/key.pem
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA && docker service update --image $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA $TEST_SERVICE_NAME
  only:
    - develop

build_prod:
  stage: build
  variables:
    IMAGE_NAME: $ALI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  before_script:
    - docker login -u $ALI_REGISTRY_USER -p $ALI_REGISTRY_PASSWORD $ALI_REGISTRY_HOST
  script:
    - docker build --build-arg APP_ROOT=/go/src/gitlab.dreamdev.cn/ebag/$CI_PROJECT_NAME -t $ALI_REGISTRY_IMAGE:$CI_COMMIT_TAG -t $ALI_REGISTRY_IMAGE:latest -f docker/prod/Dockerfile .
    - docker push $IMAGE_NAME
  only:
    - tags
  
deploy_prod:
  stage: deploy
  variables:
    IMAGE_NAME: $ALI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    PROD_NAMESPACE: ebag-prod
    PROD_DEPLOYMENT: knowtech
    PROD_CONTTAINER: knowtech
  image: registry.gitlab.dreamdev.cn/docker/build/kubectl:v1.14.1
  before_script:
    - mkdir -p ~/.kube
    - echo "$PROD_KUBERNETES_CONFIG" > ~/.kube/config
    - echo "$PROD_KUBERNETES_CA" > ~/.kube/ca.crt
  script:
    - kubectl -n $PROD_NAMESPACE set image deployment/$PROD_DEPLOYMENT $PROD_CONTTAINER=$IMAGE_NAME
  only:
    - tags
  when: manual  
